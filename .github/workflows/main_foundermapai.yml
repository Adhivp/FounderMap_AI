name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Make package public
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /user/packages/container/${{ env.IMAGE_NAME }}/versions/$(echo ${{ steps.meta.outputs.tags }} | cut -d':' -f2) \
            -f visibility=public


      - name: Make package public
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /user/packages/container/${{ env.IMAGE_NAME }}/versions/$(echo ${{ steps.meta.outputs.tags }} | cut -d':' -f2) \
            -f visibility='public'

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        run: |
          # Create an environment if it doesn't exist
          if ! az containerapp env show --name MyContainerAppEnv --resource-group Foundermap_ai; then
            echo "Creating Azure Container App environment..."
            az containerapp env create --name MyContainerAppEnv --resource-group Foundermap_ai --location southindia
          fi

          # Check if the container app exists
          if az containerapp show --resource-group Foundermap_ai --name foundermapaicontainerapp; then
            echo "Updating existing Container App"
            # Update the container app using the built image
            az containerapp update --name foundermapaicontainerapp \
                                   --resource-group Foundermap_ai \
                                   --image ${{ steps.meta.outputs.tags }}
          else
            echo "Creating a new Container App"
            # Create the container app using the built image
            az containerapp create --name foundermapaicontainerapp \
                                   --resource-group Foundermap_ai \
                                   --image ${{ steps.meta.outputs.tags }} \
                                   --target-port 8000 \
                                   --ingress external \
                                   --environment MyContainerAppEnv
          fi
